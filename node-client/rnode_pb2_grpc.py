# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import rnode_pb2 as rnode__pb2


class ReplStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Run = channel.unary_unary(
        '/coop.rchain.node.Repl/Run',
        request_serializer=rnode__pb2.CmdRequest.SerializeToString,
        response_deserializer=rnode__pb2.ReplResponse.FromString,
        )
    self.Eval = channel.unary_unary(
        '/coop.rchain.node.Repl/Eval',
        request_serializer=rnode__pb2.EvalRequest.SerializeToString,
        response_deserializer=rnode__pb2.ReplResponse.FromString,
        )


class ReplServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Run(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Eval(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ReplServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Run': grpc.unary_unary_rpc_method_handler(
          servicer.Run,
          request_deserializer=rnode__pb2.CmdRequest.FromString,
          response_serializer=rnode__pb2.ReplResponse.SerializeToString,
      ),
      'Eval': grpc.unary_unary_rpc_method_handler(
          servicer.Eval,
          request_deserializer=rnode__pb2.EvalRequest.FromString,
          response_serializer=rnode__pb2.ReplResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'coop.rchain.node.Repl', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class DiagnosticsStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ListPeers = channel.unary_unary(
        '/coop.rchain.node.Diagnostics/ListPeers',
        request_serializer=rnode__pb2.ListPeersRequest.SerializeToString,
        response_deserializer=rnode__pb2.Peers.FromString,
        )


class DiagnosticsServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def ListPeers(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_DiagnosticsServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ListPeers': grpc.unary_unary_rpc_method_handler(
          servicer.ListPeers,
          request_deserializer=rnode__pb2.ListPeersRequest.FromString,
          response_serializer=rnode__pb2.Peers.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'coop.rchain.node.Diagnostics', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
